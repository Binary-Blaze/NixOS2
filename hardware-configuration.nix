# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];
  hardware.opengl.driSupport32Bit = true;
  boot.initrd.availableKernelModules = [ "sd_mod" "sr_mod" "ahci" "xhci_pci" "virtio_pci" "virtio_blk"];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "hv_vmbus" "hv_storvsc" "fuse" "coretemp" ];
  boot.kernelParams = [ "video=hyperv_fb:800x600" ];
  boot.kernel.sysctl."vm.overcommit_memory" = "1";
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/da39cefd-a994-460a-b69d-7091574b2fdc";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  boot.initrd.luks.devices."luks-a65021d9-2060-4377-9ca0-aac56f72f125".device = "/dev/disk/by-uuid/a65021d9-2060-4377-9ca0-aac56f72f125";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/453C-67FC";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/d693869a-9efb-4ee5-8811-dd1f00a2b973"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  virtualisation.hypervGuest.enable = true;
  virtualisation.libvirtd.enable = true;
  virtualisation.podman.enable = true;
  
}
